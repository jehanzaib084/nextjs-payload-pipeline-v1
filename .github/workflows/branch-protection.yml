name: Branch Protection Checks

on:
  push:
    branches-ignore: [main]

jobs:
  branch-validation:
    name: Branch Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Auto-fix issues before validation
        run: |
          echo "üîß Auto-fixing issues on branch: ${{ github.ref_name }}"
          pnpm lint:fix || echo "‚ö†Ô∏è Some ESLint issues couldn't be auto-fixed"
          pnpm format || echo "‚ö†Ô∏è Some formatting issues couldn't be auto-fixed"

      - name: Quick validation
        run: |
          echo "üîç Running quick validation for branch: ${{ github.ref_name }}"

          # Quick lint check
          if ! pnpm lint; then
            echo ""
            echo "‚ùå Linting failed!"
            echo ""
            echo "üí° To fix locally:"
            echo "   pnpm lint:fix"
            echo ""
            exit 1
          fi

          # Type check
          if ! pnpm type-check; then
            echo ""
            echo "‚ùå Type checking failed!"
            echo ""
            echo "ÔøΩ To fix locally:"
            echo "   pnpm type-check"
            echo "   pnpm generate:types  # For Payload CMS"
            echo ""
            exit 1
          fi

          # Build check (TypeScript validation only)
          echo "üèóÔ∏è Quick TypeScript validation..."
          if ! pnpm type-check; then
            echo ""
            echo "‚ùå TypeScript validation failed!"
            echo ""
            echo "üí° To fix locally:"
            echo "   pnpm type-check"
            echo "   pnpm generate:types  # For Payload CMS"
            echo "   Check for type errors in your code"
            echo ""
            exit 1
          fi
          
          echo "‚úÖ TypeScript validation passed!"

      - name: Commit message validation
        run: |
          echo "üìù Recent commits on this branch:"

          # Get commit messages for this push
          commits=$(git log --oneline origin/main..HEAD || git log --oneline -10)

          if [ -n "$commits" ]; then
            echo "$commits"
          else
            echo "No commits found or this is the first commit"
          fi
